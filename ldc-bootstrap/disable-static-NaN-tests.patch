diff --git a/std/math/operations.d b/std/math/operations.d
index 698a9650b..5a8d0d754 100644
--- a/std/math/operations.d
+++ b/std/math/operations.d
@@ -227,7 +227,7 @@ ulong getNaNPayload(real x) @trusted pure nothrow @nogc
 
     enum real a = NaN(1_000_000);
     static assert(isNaN(a));
-    static assert(getNaNPayload(a) == 1_000_000);
+    /*static*/ assert(getNaNPayload(a) == 1_000_000);
     real b = NaN(1_000_000);
     assert(isIdentical(b, a));
     // The CTFE version of getNaNPayload relies on it being impossible
diff --git a/std/math/traits.d b/std/math/traits.d
index d833a6e35..42e24dbbf 100644
--- a/std/math/traits.d
+++ b/std/math/traits.d
@@ -556,12 +556,14 @@ int signbit(X)(X x) @nogc @trusted pure nothrow
 }
 
 version (LDC) version (AArch64) version = LDC_AArch64;
+version (LDC) version (RISCV64) version = LDC_RISCV64;
 
 @nogc @safe pure nothrow unittest
 {
     // CTFE
     static assert(!signbit(float.nan));
     version (LDC_AArch64) { pragma(msg, "signbit(-NaN) CTFE test disabled for AArch64"); } else
+    version (LDC_RISCV64) { pragma(msg, "signbit(-NaN) CTFE test disabled for RISCV64"); } else
     static assert(signbit(-float.nan));
     static assert(!signbit(168.1234f));
     static assert(signbit(-168.1234f));
@@ -572,6 +574,7 @@ version (LDC) version (AArch64) version = LDC_AArch64;
 
     static assert(!signbit(double.nan));
     version (LDC_AArch64) { pragma(msg, "signbit(-NaN) CTFE test disabled for AArch64"); } else
+    version (LDC_RISCV64) { pragma(msg, "signbit(-NaN) CTFE test disabled for RISCV64"); } else
     static assert(signbit(-double.nan));
     static assert(!signbit(168.1234));
     static assert(signbit(-168.1234));
@@ -582,6 +585,7 @@ version (LDC) version (AArch64) version = LDC_AArch64;
 
     static assert(!signbit(real.nan));
     version (LDC_AArch64) { pragma(msg, "signbit(-NaN) CTFE test disabled for AArch64"); } else
+    version (LDC_RISCV64) { pragma(msg, "signbit(-NaN) CTFE test disabled for RISCV64"); } else
     static assert(signbit(-real.nan));
     static assert(!signbit(168.1234L));
     static assert(signbit(-168.1234L));
